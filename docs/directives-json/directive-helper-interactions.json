{
  "description": "Helper-Directive interaction mappings for directive_helpers junction table",
  "generated_from": [
    "Directive JSON workflows (explicit references)",
    "Helper-functions-reference.md (Used By sections)"
  ],
  "statistics": {
    "total_mappings": 62,
    "total_helpers_defined": 49,
    "helpers_mapped": 47,
    "helpers_unmapped": 2,
    "unique_directives": 28
  },
  "unmapped_helpers": [
    "query_mcp_db",
    "query_project_db"
  ],
  "mappings": [
    {
      "directive_name": "aifp_help",
      "helper_name": "get_directive_content",
      "execution_context": "AI assistance system (load detailed directive guidance when needed), documentation tools, `aifp_help` commands",
      "sequence_order": 0,
      "is_required": true,
      "description": "aifp_help uses get_directive_content",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_run",
      "helper_name": "get_all_directives",
      "execution_context": "`aifp_run`, AI session initialization",
      "sequence_order": 0,
      "is_required": true,
      "description": "aifp_run uses get_all_directives",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_run",
      "helper_name": "find_directive_by_intent",
      "execution_context": "`aifp_run`, user preference mapping",
      "sequence_order": 1,
      "is_required": true,
      "description": "aifp_run uses find_directive_by_intent",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_run",
      "helper_name": "get_project_status",
      "execution_context": "`aifp_run`, `aifp_status`, `project_init`",
      "sequence_order": 2,
      "is_required": true,
      "description": "aifp_run uses get_project_status",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "get_directive_interactions",
      "execution_context": "`aifp_status`, directive execution planning, workflow visualization",
      "sequence_order": 0,
      "is_required": true,
      "description": "aifp_status uses get_directive_interactions",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "get_project_status",
      "execution_context": "`aifp_run`, `aifp_status`, `project_init`",
      "sequence_order": 1,
      "is_required": true,
      "description": "aifp_status uses get_project_status",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "get_project_context",
      "execution_context": "Session initialization, `aifp_status`",
      "sequence_order": 2,
      "is_required": true,
      "description": "aifp_status uses get_project_context",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "get_project_tasks",
      "execution_context": "`aifp_status`, task management directives",
      "sequence_order": 3,
      "is_required": true,
      "description": "aifp_status uses get_project_tasks",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "get_status_tree",
      "execution_context": "`aifp_status` directive",
      "sequence_order": 4,
      "is_required": true,
      "description": "aifp_status uses get_status_tree",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "read_project_blueprint",
      "execution_context": "`aifp_status`, `project_evolution`",
      "sequence_order": 5,
      "is_required": true,
      "description": "aifp_status uses read_project_blueprint",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "detect_and_init_project",
      "execution_context": "`aifp_status` directive (when project not initialized)",
      "sequence_order": 6,
      "is_required": true,
      "description": "aifp_status uses detect_and_init_project",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "get_git_status",
      "execution_context": "`git_sync_state`, `aifp_status`, any directive needing comprehensive Git state snapshot",
      "sequence_order": 7,
      "is_required": true,
      "description": "aifp_status uses get_git_status",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "detect_external_changes",
      "execution_context": "`git_detect_external_changes` directive, `aifp_status`",
      "sequence_order": 8,
      "is_required": true,
      "description": "aifp_status uses detect_external_changes",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "sync_git_state",
      "execution_context": "`git_sync_state` directive, `aifp_status`",
      "sequence_order": 9,
      "is_required": true,
      "description": "aifp_status uses sync_git_state",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "get_user_directive_status",
      "execution_context": "`user_directive_status`, `aifp_status`",
      "sequence_order": 10,
      "is_required": true,
      "description": "aifp_status uses get_user_directive_status",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_create_branch",
      "helper_name": "get_current_branch",
      "execution_context": "`git_create_branch`, `git_sync_state`, status reporting",
      "sequence_order": 0,
      "is_required": true,
      "description": "git_create_branch uses get_current_branch",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_create_branch",
      "helper_name": "create_user_branch",
      "execution_context": "`git_create_branch` directive",
      "sequence_order": 1,
      "is_required": true,
      "description": "git_create_branch uses create_user_branch",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_create_branch",
      "helper_name": "get_user_name_for_branch",
      "execution_context": "`git_create_branch` directive",
      "sequence_order": 2,
      "is_required": true,
      "description": "git_create_branch uses get_user_name_for_branch",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_detect_conflicts",
      "helper_name": "detect_conflicts_before_merge",
      "execution_context": "`git_detect_conflicts`, `git_merge_branch` directives",
      "sequence_order": 0,
      "is_required": true,
      "description": "git_detect_conflicts uses detect_conflicts_before_merge",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_detect_external_changes",
      "helper_name": "get_current_commit_hash",
      "execution_context": "`git_init`, `git_sync_state`, `git_detect_external_changes`",
      "sequence_order": 0,
      "is_required": true,
      "description": "git_detect_external_changes uses get_current_commit_hash",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_detect_external_changes",
      "helper_name": "detect_external_changes",
      "execution_context": "`git_detect_external_changes` directive, `aifp_status`",
      "sequence_order": 1,
      "is_required": true,
      "description": "git_detect_external_changes uses detect_external_changes",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_init",
      "helper_name": "get_current_commit_hash",
      "execution_context": "`git_init`, `git_sync_state`, `git_detect_external_changes`",
      "sequence_order": 0,
      "is_required": true,
      "description": "git_init uses get_current_commit_hash",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_merge_branch",
      "helper_name": "detect_conflicts_before_merge",
      "execution_context": "`git_detect_conflicts`, `git_merge_branch` directives",
      "sequence_order": 0,
      "is_required": true,
      "description": "git_merge_branch uses detect_conflicts_before_merge",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_merge_branch",
      "helper_name": "merge_with_fp_intelligence",
      "execution_context": "`git_merge_branch` directive",
      "sequence_order": 1,
      "is_required": true,
      "description": "git_merge_branch uses merge_with_fp_intelligence",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_sync_state",
      "helper_name": "get_current_commit_hash",
      "execution_context": "`git_init`, `git_sync_state`, `git_detect_external_changes`",
      "sequence_order": 0,
      "is_required": true,
      "description": "git_sync_state uses get_current_commit_hash",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_sync_state",
      "helper_name": "get_current_branch",
      "execution_context": "`git_create_branch`, `git_sync_state`, status reporting",
      "sequence_order": 1,
      "is_required": true,
      "description": "git_sync_state uses get_current_branch",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_sync_state",
      "helper_name": "get_git_status",
      "execution_context": "`git_sync_state`, `aifp_status`, any directive needing comprehensive Git state snapshot",
      "sequence_order": 2,
      "is_required": true,
      "description": "git_sync_state uses get_git_status",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "git_sync_state",
      "helper_name": "sync_git_state",
      "execution_context": "`git_sync_state` directive, `aifp_status`",
      "sequence_order": 3,
      "is_required": true,
      "description": "git_sync_state uses sync_git_state",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "project_blueprint_update",
      "helper_name": "update_project_blueprint_section",
      "execution_context": "`project_evolution`, `project_blueprint_update`",
      "sequence_order": 0,
      "is_required": true,
      "description": "project_blueprint_update uses update_project_blueprint_section",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "project_evolution",
      "helper_name": "read_project_blueprint",
      "execution_context": "`aifp_status`, `project_evolution`",
      "sequence_order": 0,
      "is_required": true,
      "description": "project_evolution uses read_project_blueprint",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "project_evolution",
      "helper_name": "update_project_blueprint_section",
      "execution_context": "`project_evolution`, `project_blueprint_update`",
      "sequence_order": 1,
      "is_required": true,
      "description": "project_evolution uses update_project_blueprint_section",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "project_init",
      "helper_name": "create_project_directory",
      "execution_context": "workflow_step",
      "sequence_order": 0,
      "is_required": true,
      "description": "project_init uses create_project_directory in workflow",
      "source": "directive_json_workflow"
    },
    {
      "directive_name": "project_init",
      "helper_name": "create_project_blueprint",
      "execution_context": "workflow_step",
      "sequence_order": 1,
      "is_required": true,
      "description": "project_init uses create_project_blueprint in workflow",
      "source": "directive_json_workflow"
    },
    {
      "directive_name": "project_init",
      "helper_name": "initialize_project_db",
      "execution_context": "helper_project_db",
      "sequence_order": 2,
      "is_required": true,
      "description": "project_init uses initialize_project_db in workflow",
      "source": "directive_json_workflow"
    },
    {
      "directive_name": "project_init",
      "helper_name": "initialize_user_preferences_db",
      "execution_context": "helper_prefs_db",
      "sequence_order": 3,
      "is_required": true,
      "description": "project_init uses initialize_user_preferences_db in workflow",
      "source": "directive_json_workflow"
    },
    {
      "directive_name": "project_init",
      "helper_name": "validate_initialization",
      "execution_context": "workflow_step",
      "sequence_order": 4,
      "is_required": true,
      "description": "project_init uses validate_initialization in workflow",
      "source": "directive_json_workflow"
    },
    {
      "directive_name": "project_init",
      "helper_name": "init_project_db",
      "execution_context": "`project_init` directive",
      "sequence_order": 6,
      "is_required": true,
      "description": "project_init uses init_project_db",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "project_init",
      "helper_name": "get_project_status",
      "execution_context": "`aifp_run`, `aifp_status`, `project_init`",
      "sequence_order": 7,
      "is_required": true,
      "description": "project_init uses get_project_status",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "project_init",
      "helper_name": "scan_existing_files",
      "execution_context": "`project_init` directive",
      "sequence_order": 8,
      "is_required": true,
      "description": "project_init uses scan_existing_files",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "project_init",
      "helper_name": "infer_architecture",
      "execution_context": "`project_init` directive",
      "sequence_order": 9,
      "is_required": true,
      "description": "project_init uses infer_architecture",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "project_task_complete",
      "helper_name": "get_project_tasks",
      "execution_context": "workflow_step",
      "sequence_order": 0,
      "is_required": true,
      "description": "project_task_complete uses get_project_tasks in workflow",
      "source": "directive_json_workflow"
    },
    {
      "directive_name": "user_directive_activate",
      "helper_name": "activate_directive",
      "execution_context": "`user_directive_activate` directive",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_directive_activate uses activate_directive",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_deactivate",
      "helper_name": "deactivate_directive",
      "execution_context": "`user_directive_deactivate` directive",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_directive_deactivate uses deactivate_directive",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_implement",
      "helper_name": "generate_implementation_code",
      "execution_context": "`user_directive_implement` directive",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_directive_implement uses generate_implementation_code",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_implement",
      "helper_name": "detect_dependencies",
      "execution_context": "`user_directive_implement` directive",
      "sequence_order": 1,
      "is_required": true,
      "description": "user_directive_implement uses detect_dependencies",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_implement",
      "helper_name": "install_dependency",
      "execution_context": "`user_directive_implement` directive",
      "sequence_order": 2,
      "is_required": true,
      "description": "user_directive_implement uses install_dependency",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_monitor",
      "helper_name": "monitor_directive_execution",
      "execution_context": "`user_directive_monitor` directive",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_directive_monitor uses monitor_directive_execution",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_parse",
      "helper_name": "parse_directive_file",
      "execution_context": "`user_directive_parse` directive",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_directive_parse uses parse_directive_file",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_status",
      "helper_name": "get_user_directive_status",
      "execution_context": "`user_directive_status`, `aifp_status`",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_directive_status uses get_user_directive_status",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_update",
      "helper_name": "update_directive",
      "execution_context": "`user_directive_update` directive",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_directive_update uses update_directive",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_directive_validate",
      "helper_name": "validate_user_directive",
      "execution_context": "`user_directive_validate` directive",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_directive_validate uses validate_user_directive",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "tracking_toggle",
      "helper_name": "toggle_tracking_feature",
      "execution_context": "`user_preferences_tracking_toggle` directive",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_preferences_tracking_toggle uses toggle_tracking_feature",
      "source": "helper_reference_used_by"
    },
    {
      "directive_name": "user_preferences_update",
      "helper_name": "find_directive_by_intent",
      "execution_context": "workflow_step",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_preferences_update uses find_directive_by_intent in workflow",
      "source": "directive_json_workflow"
    },
    {
      "directive_name": "aifp_run",
      "helper_name": "get_directive",
      "execution_context": "Directive lookup during execution",
      "sequence_order": 99,
      "is_required": true,
      "description": "aifp_run uses get_directive for directive lookup",
      "source": "manual_addition"
    },
    {
      "directive_name": "aifp_run",
      "helper_name": "search_directives",
      "execution_context": "Directive discovery and intent matching",
      "sequence_order": 99,
      "is_required": true,
      "description": "aifp_run uses search_directives for discovery",
      "source": "manual_addition"
    },
    {
      "directive_name": "project_file_read",
      "helper_name": "get_project_files",
      "execution_context": "File listing and management",
      "sequence_order": 0,
      "is_required": true,
      "description": "project_file_read uses get_project_files",
      "source": "manual_addition"
    },
    {
      "directive_name": "project_file_write",
      "helper_name": "get_project_files",
      "execution_context": "File management and validation",
      "sequence_order": 0,
      "is_required": false,
      "description": "project_file_write may use get_project_files",
      "source": "manual_addition"
    },
    {
      "directive_name": "project_compliance_check",
      "helper_name": "get_project_functions",
      "execution_context": "FP compliance analysis",
      "sequence_order": 0,
      "is_required": true,
      "description": "project_compliance_check uses get_project_functions",
      "source": "manual_addition"
    },
    {
      "directive_name": "tracking_toggle",
      "helper_name": "get_tracking_settings",
      "execution_context": "Current tracking settings retrieval",
      "sequence_order": 0,
      "is_required": true,
      "description": "tracking_toggle uses get_tracking_settings",
      "source": "manual_addition"
    },
    {
      "directive_name": "aifp_status",
      "helper_name": "list_active_branches",
      "execution_context": "Git collaboration status",
      "sequence_order": 99,
      "is_required": false,
      "description": "aifp_status uses list_active_branches for git info",
      "source": "manual_addition"
    },
    {
      "directive_name": "user_preferences_update",
      "helper_name": "set_directive_preference",
      "execution_context": "Writes preference to directive_preferences table after validation",
      "sequence_order": 1,
      "is_required": true,
      "description": "user_preferences_update uses set_directive_preference to store preferences",
      "source": "manual_correction"
    },
    {
      "directive_name": "user_preferences_sync",
      "helper_name": "get_directive_preference",
      "execution_context": "Loads directive preferences before execution",
      "sequence_order": 0,
      "is_required": true,
      "description": "user_preferences_sync uses get_directive_preference to load preferences",
      "source": "manual_correction"
    }
  ],
  "notes": {
    "unmapped_helpers_explanation": "query_mcp_db and query_project_db are advanced query helpers. Classification options: (1) is_tool=TRUE (exposed as direct MCP tools for advanced queries), (2) is_internal=TRUE (only called by other helpers), OR (3) Add directive mappings if specific directives should use them. Decision deferred to MCP implementation phase."
  }
}